/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * ImportPaymentInstrumentsResponseCreditCards
 */

public class ImportPaymentInstrumentsResponseCreditCards implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_TRANSACTION_REF = "transactionRef";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REF)
  private String transactionRef;

  public static final String SERIALIZED_NAME_TRANSACTION_TIMESTAMP = "transactionTimestamp";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TIMESTAMP)
  private String transactionTimestamp;

  public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transactionType";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
  private String transactionType;

  public static final String SERIALIZED_NAME_TRANSACTION_RESPONSE_CODE = "transactionResponseCode";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_RESPONSE_CODE)
  private String transactionResponseCode;

  public static final String SERIALIZED_NAME_TRANSACTION_RESPONSE_TEXT = "transactionResponseText";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_RESPONSE_TEXT)
  private String transactionResponseText;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_BIN = "bin";
  @SerializedName(SERIALIZED_NAME_BIN)
  private String bin;

  public static final String SERIALIZED_NAME_CARD_SUFFIX = "cardSuffix";
  @SerializedName(SERIALIZED_NAME_CARD_SUFFIX)
  private String cardSuffix;

  public static final String SERIALIZED_NAME_EXPIRY_MONTH = "expiryMonth";
  @SerializedName(SERIALIZED_NAME_EXPIRY_MONTH)
  private String expiryMonth;

  public static final String SERIALIZED_NAME_EXPIRY_YEAR = "expiryYear";
  @SerializedName(SERIALIZED_NAME_EXPIRY_YEAR)
  private String expiryYear;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  /**
   * The import process result for the credit card instrument.
   */
  @JsonAdapter(ResultEnum.Adapter.class)
  public enum ResultEnum {
    OK("OK"),
    
    DUP("DUP"),
    
    EXP("EXP"),
    
    ERROR("ERROR");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResultEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResultEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private ResultEnum result;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "errorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private Object errorMessage;


  public ImportPaymentInstrumentsResponseCreditCards transactionRef(String transactionRef) {
    
    this.transactionRef = transactionRef;
    return this;
  }

   /**
   * WebPay reference in the transaction logs. This number uniquely identifies the transaction in WebPay.
   * @return transactionRef
  **/
  @ApiModelProperty(example = "2000000009719570", required = true, value = "WebPay reference in the transaction logs. This number uniquely identifies the transaction in WebPay.")

  public String getTransactionRef() {
    return transactionRef;
  }


  public void setTransactionRef(String transactionRef) {
    this.transactionRef = transactionRef;
  }


  public ImportPaymentInstrumentsResponseCreditCards transactionTimestamp(String transactionTimestamp) {
    
    this.transactionTimestamp = transactionTimestamp;
    return this;
  }

   /**
   * The WebPay transaction timestamp. The timestamp format is ISO8601.
   * @return transactionTimestamp
  **/
  @ApiModelProperty(example = "2017-09-26T23:11:27.000Z", required = true, value = "The WebPay transaction timestamp. The timestamp format is ISO8601.")

  public String getTransactionTimestamp() {
    return transactionTimestamp;
  }


  public void setTransactionTimestamp(String transactionTimestamp) {
    this.transactionTimestamp = transactionTimestamp;
  }


  public ImportPaymentInstrumentsResponseCreditCards transactionType(String transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * The WebPay transaction type.
   * @return transactionType
  **/
  @ApiModelProperty(example = "PURCHASE", required = true, value = "The WebPay transaction type.")

  public String getTransactionType() {
    return transactionType;
  }


  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }


  public ImportPaymentInstrumentsResponseCreditCards transactionResponseCode(String transactionResponseCode) {
    
    this.transactionResponseCode = transactionResponseCode;
    return this;
  }

   /**
   * The WebPay transaction response code.
   * @return transactionResponseCode
  **/
  @ApiModelProperty(example = "00", required = true, value = "The WebPay transaction response code.")

  public String getTransactionResponseCode() {
    return transactionResponseCode;
  }


  public void setTransactionResponseCode(String transactionResponseCode) {
    this.transactionResponseCode = transactionResponseCode;
  }


  public ImportPaymentInstrumentsResponseCreditCards transactionResponseText(String transactionResponseText) {
    
    this.transactionResponseText = transactionResponseText;
    return this;
  }

   /**
   * The WebPay transaction response text.
   * @return transactionResponseText
  **/
  @ApiModelProperty(example = "APPROVED", required = true, value = "The WebPay transaction response text.")

  public String getTransactionResponseText() {
    return transactionResponseText;
  }


  public void setTransactionResponseText(String transactionResponseText) {
    this.transactionResponseText = transactionResponseText;
  }


  public ImportPaymentInstrumentsResponseCreditCards orderNumber(String orderNumber) {
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * The merchant order number used in the WebPay transaction.
   * @return orderNumber
  **/
  @ApiModelProperty(example = "20170505090", required = true, value = "The merchant order number used in the WebPay transaction.")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public ImportPaymentInstrumentsResponseCreditCards bin(String bin) {
    
    this.bin = bin;
    return this;
  }

   /**
   * The bin (first 6 digits) of the credit card number used in the WebPay transaction.
   * @return bin
  **/
  @ApiModelProperty(example = "543048", required = true, value = "The bin (first 6 digits) of the credit card number used in the WebPay transaction.")

  public String getBin() {
    return bin;
  }


  public void setBin(String bin) {
    this.bin = bin;
  }


  public ImportPaymentInstrumentsResponseCreditCards cardSuffix(String cardSuffix) {
    
    this.cardSuffix = cardSuffix;
    return this;
  }

   /**
   * The suffix (last 4 digits) of the credit card number used in the WebPay transaction.
   * @return cardSuffix
  **/
  @ApiModelProperty(example = "4307", required = true, value = "The suffix (last 4 digits) of the credit card number used in the WebPay transaction.")

  public String getCardSuffix() {
    return cardSuffix;
  }


  public void setCardSuffix(String cardSuffix) {
    this.cardSuffix = cardSuffix;
  }


  public ImportPaymentInstrumentsResponseCreditCards expiryMonth(String expiryMonth) {
    
    this.expiryMonth = expiryMonth;
    return this;
  }

   /**
   * The month of the expiry date of the credit card.
   * @return expiryMonth
  **/
  @ApiModelProperty(example = "01", required = true, value = "The month of the expiry date of the credit card.")

  public String getExpiryMonth() {
    return expiryMonth;
  }


  public void setExpiryMonth(String expiryMonth) {
    this.expiryMonth = expiryMonth;
  }


  public ImportPaymentInstrumentsResponseCreditCards expiryYear(String expiryYear) {
    
    this.expiryYear = expiryYear;
    return this;
  }

   /**
   * The year of the expiry date of the credit card.
   * @return expiryYear
  **/
  @ApiModelProperty(example = "19", required = true, value = "The year of the expiry date of the credit card.")

  public String getExpiryYear() {
    return expiryYear;
  }


  public void setExpiryYear(String expiryYear) {
    this.expiryYear = expiryYear;
  }


  public ImportPaymentInstrumentsResponseCreditCards amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the WebPay transaction.
   * @return amount
  **/
  @ApiModelProperty(example = "75.5", required = true, value = "The amount of the WebPay transaction.")

  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public ImportPaymentInstrumentsResponseCreditCards result(ResultEnum result) {
    
    this.result = result;
    return this;
  }

   /**
   * The import process result for the credit card instrument.
   * @return result
  **/
  @ApiModelProperty(required = true, value = "The import process result for the credit card instrument.")

  public ResultEnum getResult() {
    return result;
  }


  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public ImportPaymentInstrumentsResponseCreditCards errorMessage(Object errorMessage) {
    
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * The import process error message if \&quot;result\&quot; is \&quot;ERROR\&quot;. Will be null if \&quot;result\&quot; is not \&quot;ERROR\&quot;.
   * @return errorMessage
  **/
  @ApiModelProperty(required = true, value = "The import process error message if \"result\" is \"ERROR\". Will be null if \"result\" is not \"ERROR\".")

  public Object getErrorMessage() {
    return errorMessage;
  }


  public void setErrorMessage(Object errorMessage) {
    this.errorMessage = errorMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportPaymentInstrumentsResponseCreditCards importPaymentInstrumentsResponseCreditCards = (ImportPaymentInstrumentsResponseCreditCards) o;
    return Objects.equals(this.transactionRef, importPaymentInstrumentsResponseCreditCards.transactionRef) &&
        Objects.equals(this.transactionTimestamp, importPaymentInstrumentsResponseCreditCards.transactionTimestamp) &&
        Objects.equals(this.transactionType, importPaymentInstrumentsResponseCreditCards.transactionType) &&
        Objects.equals(this.transactionResponseCode, importPaymentInstrumentsResponseCreditCards.transactionResponseCode) &&
        Objects.equals(this.transactionResponseText, importPaymentInstrumentsResponseCreditCards.transactionResponseText) &&
        Objects.equals(this.orderNumber, importPaymentInstrumentsResponseCreditCards.orderNumber) &&
        Objects.equals(this.bin, importPaymentInstrumentsResponseCreditCards.bin) &&
        Objects.equals(this.cardSuffix, importPaymentInstrumentsResponseCreditCards.cardSuffix) &&
        Objects.equals(this.expiryMonth, importPaymentInstrumentsResponseCreditCards.expiryMonth) &&
        Objects.equals(this.expiryYear, importPaymentInstrumentsResponseCreditCards.expiryYear) &&
        Objects.equals(this.amount, importPaymentInstrumentsResponseCreditCards.amount) &&
        Objects.equals(this.result, importPaymentInstrumentsResponseCreditCards.result) &&
        Objects.equals(this.errorMessage, importPaymentInstrumentsResponseCreditCards.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionRef, transactionTimestamp, transactionType, transactionResponseCode, transactionResponseText, orderNumber, bin, cardSuffix, expiryMonth, expiryYear, amount, result, errorMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportPaymentInstrumentsResponseCreditCards {\n");
    sb.append("    transactionRef: ").append(toIndentedString(transactionRef)).append("\n");
    sb.append("    transactionTimestamp: ").append(toIndentedString(transactionTimestamp)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    transactionResponseCode: ").append(toIndentedString(transactionResponseCode)).append("\n");
    sb.append("    transactionResponseText: ").append(toIndentedString(transactionResponseText)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    cardSuffix: ").append(toIndentedString(cardSuffix)).append("\n");
    sb.append("    expiryMonth: ").append(toIndentedString(expiryMonth)).append("\n");
    sb.append("    expiryYear: ").append(toIndentedString(expiryYear)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

