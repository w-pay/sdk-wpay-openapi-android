/*
 * Village Wallet
 * APIs for Village Wallet
 *
 * The version of the OpenAPI document: 0.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.annotations.SerializedName;

import java.io.Serializable;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Mandatory data object containing details of the payment session
 */
@ApiModel(description = "Mandatory data object containing details of the payment session")

public class MerchantPaymentSessionData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_MERCHANT_INFO = "merchantInfo";
  @SerializedName(SERIALIZED_NAME_MERCHANT_INFO)
  private DynamicPayload merchantInfo;

  public static final String SERIALIZED_NAME_GENERATE_Q_R = "generateQR";
  @SerializedName(SERIALIZED_NAME_GENERATE_Q_R)
  private Boolean generateQR = false;

  public static final String SERIALIZED_NAME_TIME_TO_LIVE_PAYMENT_SESSION = "timeToLivePaymentSession";
  @SerializedName(SERIALIZED_NAME_TIME_TO_LIVE_PAYMENT_SESSION)
  private Integer timeToLivePaymentSession = 0;

  public static final String SERIALIZED_NAME_TIME_TO_LIVE_Q_R = "timeToLiveQR";
  @SerializedName(SERIALIZED_NAME_TIME_TO_LIVE_Q_R)
  private Integer timeToLiveQR = 0;

  public static final String SERIALIZED_NAME_PAYMENT_REQUEST_ID = "paymentRequestId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REQUEST_ID)
  private String paymentRequestId;


  public MerchantPaymentSessionData location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * The location of the payment session (Used to group payment sessions)
   * @return location
  **/
  @ApiModelProperty(required = true, value = "The location of the payment session (Used to group payment sessions)")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public MerchantPaymentSessionData merchantInfo(DynamicPayload merchantInfo) {
    
    this.merchantInfo = merchantInfo;
    return this;
  }

   /**
   * Get merchantInfo
   * @return merchantInfo
  **/
  @ApiModelProperty(required = true, value = "")

  public DynamicPayload getMerchantInfo() {
    return merchantInfo;
  }


  public void setMerchantInfo(DynamicPayload merchantInfo) {
    this.merchantInfo = merchantInfo;
  }


  public MerchantPaymentSessionData generateQR(Boolean generateQR) {
    
    this.generateQR = generateQR;
    return this;
  }

   /**
   * Flag indicating whether a QR code should be created and returned in the response
   * @return generateQR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating whether a QR code should be created and returned in the response")

  public Boolean getGenerateQR() {
    return generateQR;
  }


  public void setGenerateQR(Boolean generateQR) {
    this.generateQR = generateQR;
  }


  public MerchantPaymentSessionData timeToLivePaymentSession(Integer timeToLivePaymentSession) {
    
    this.timeToLivePaymentSession = timeToLivePaymentSession;
    return this;
  }

   /**
   * The time in seconds that the payment request should remain valid.  After this time any use of the request to create a payment will fail. Default value is 0 which indicates that the code will not expire until it is deleted
   * minimum: 0
   * @return timeToLivePaymentSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time in seconds that the payment request should remain valid.  After this time any use of the request to create a payment will fail. Default value is 0 which indicates that the code will not expire until it is deleted")

  public Integer getTimeToLivePaymentSession() {
    return timeToLivePaymentSession;
  }


  public void setTimeToLivePaymentSession(Integer timeToLivePaymentSession) {
    this.timeToLivePaymentSession = timeToLivePaymentSession;
  }


  public MerchantPaymentSessionData timeToLiveQR(Integer timeToLiveQR) {
    
    this.timeToLiveQR = timeToLiveQR;
    return this;
  }

   /**
   * The time in seconds that the QR code should remain valid.  After this time any use of the request to create a payment will fail. Default value is 0 which indicates that the code will not expire until it is deleted
   * minimum: 0
   * @return timeToLiveQR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time in seconds that the QR code should remain valid.  After this time any use of the request to create a payment will fail. Default value is 0 which indicates that the code will not expire until it is deleted")

  public Integer getTimeToLiveQR() {
    return timeToLiveQR;
  }


  public void setTimeToLiveQR(Integer timeToLiveQR) {
    this.timeToLiveQR = timeToLiveQR;
  }


  public MerchantPaymentSessionData paymentRequestId(String paymentRequestId) {
    
    this.paymentRequestId = paymentRequestId;
    return this;
  }

   /**
   * The ID of the associated payment request
   * @return paymentRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the associated payment request")

  public String getPaymentRequestId() {
    return paymentRequestId;
  }


  public void setPaymentRequestId(String paymentRequestId) {
    this.paymentRequestId = paymentRequestId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantPaymentSessionData merchantPaymentSessionData = (MerchantPaymentSessionData) o;
    return Objects.equals(this.location, merchantPaymentSessionData.location) &&
        Objects.equals(this.merchantInfo, merchantPaymentSessionData.merchantInfo) &&
        Objects.equals(this.generateQR, merchantPaymentSessionData.generateQR) &&
        Objects.equals(this.timeToLivePaymentSession, merchantPaymentSessionData.timeToLivePaymentSession) &&
        Objects.equals(this.timeToLiveQR, merchantPaymentSessionData.timeToLiveQR) &&
        Objects.equals(this.paymentRequestId, merchantPaymentSessionData.paymentRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, merchantInfo, generateQR, timeToLivePaymentSession, timeToLiveQR, paymentRequestId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantPaymentSessionData {\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    merchantInfo: ").append(toIndentedString(merchantInfo)).append("\n");
    sb.append("    generateQR: ").append(toIndentedString(generateQR)).append("\n");
    sb.append("    timeToLivePaymentSession: ").append(toIndentedString(timeToLivePaymentSession)).append("\n");
    sb.append("    timeToLiveQR: ").append(toIndentedString(timeToLiveQR)).append("\n");
    sb.append("    paymentRequestId: ").append(toIndentedString(paymentRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

