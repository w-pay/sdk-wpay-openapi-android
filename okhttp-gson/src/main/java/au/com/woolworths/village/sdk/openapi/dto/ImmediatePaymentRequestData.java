/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import au.com.woolworths.village.sdk.openapi.dto.ImmediatePaymentRequestDataPayments;
import au.com.woolworths.village.sdk.openapi.dto.MerchantPayload;
import au.com.woolworths.village.sdk.openapi.dto.PaymentTransactionType;
import au.com.woolworths.village.sdk.openapi.dto.PosPayload;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * ImmediatePaymentRequestData
 */

public class ImmediatePaymentRequestData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CLIENT_REFERENCE = "clientReference";
  @SerializedName(SERIALIZED_NAME_CLIENT_REFERENCE)
  private String clientReference;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_SKIP_ROLLBACK = "skipRollback";
  @SerializedName(SERIALIZED_NAME_SKIP_ROLLBACK)
  private Boolean skipRollback;

  public static final String SERIALIZED_NAME_ALLOW_PARTIAL_SUCCESS = "allowPartialSuccess";
  @SerializedName(SERIALIZED_NAME_ALLOW_PARTIAL_SUCCESS)
  private Boolean allowPartialSuccess;

  public static final String SERIALIZED_NAME_PAYMENTS = "payments";
  @SerializedName(SERIALIZED_NAME_PAYMENTS)
  private List<ImmediatePaymentRequestDataPayments> payments = new ArrayList<ImmediatePaymentRequestDataPayments>();

  public static final String SERIALIZED_NAME_POS_PAYLOAD = "posPayload";
  @SerializedName(SERIALIZED_NAME_POS_PAYLOAD)
  private PosPayload posPayload;

  public static final String SERIALIZED_NAME_MERCHANT_PAYLOAD = "merchantPayload";
  @SerializedName(SERIALIZED_NAME_MERCHANT_PAYLOAD)
  private MerchantPayload merchantPayload;

  public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transactionType";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
  private PaymentTransactionType transactionType;


  public ImmediatePaymentRequestData clientReference(String clientReference) {
    
    this.clientReference = clientReference;
    return this;
  }

   /**
   * A merchant application specific reference number. This number should uniquely identify the transaction in the merchant’s system.
   * @return clientReference
  **/
  @ApiModelProperty(example = "T5ESYRPWJKPHF54", required = true, value = "A merchant application specific reference number. This number should uniquely identify the transaction in the merchant’s system.")

  public String getClientReference() {
    return clientReference;
  }


  public void setClientReference(String clientReference) {
    this.clientReference = clientReference;
  }


  public ImmediatePaymentRequestData orderNumber(String orderNumber) {
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * The merchant order number of the transaction.
   * @return orderNumber
  **/
  @ApiModelProperty(example = "20170505090", required = true, value = "The merchant order number of the transaction.")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public ImmediatePaymentRequestData skipRollback(Boolean skipRollback) {
    
    this.skipRollback = skipRollback;
    return this;
  }

   /**
   * An optional flag allowing the consumer to indicate that automatic rollback step should be skipped in the case of failure
   * @return skipRollback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional flag allowing the consumer to indicate that automatic rollback step should be skipped in the case of failure")

  public Boolean getSkipRollback() {
    return skipRollback;
  }


  public void setSkipRollback(Boolean skipRollback) {
    this.skipRollback = skipRollback;
  }


  public ImmediatePaymentRequestData allowPartialSuccess(Boolean allowPartialSuccess) {
    
    this.allowPartialSuccess = allowPartialSuccess;
    return this;
  }

   /**
   * An optional flag allowing the consumer to indicate that a partial success will not trigger a failure and rollback
   * @return allowPartialSuccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional flag allowing the consumer to indicate that a partial success will not trigger a failure and rollback")

  public Boolean getAllowPartialSuccess() {
    return allowPartialSuccess;
  }


  public void setAllowPartialSuccess(Boolean allowPartialSuccess) {
    this.allowPartialSuccess = allowPartialSuccess;
  }


  public ImmediatePaymentRequestData payments(List<ImmediatePaymentRequestDataPayments> payments) {
    
    this.payments = payments;
    return this;
  }

  public ImmediatePaymentRequestData addPaymentsItem(ImmediatePaymentRequestDataPayments paymentsItem) {
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Get payments
   * @return payments
  **/
  @ApiModelProperty(required = true, value = "")

  public List<ImmediatePaymentRequestDataPayments> getPayments() {
    return payments;
  }


  public void setPayments(List<ImmediatePaymentRequestDataPayments> payments) {
    this.payments = payments;
  }


  public ImmediatePaymentRequestData posPayload(PosPayload posPayload) {
    
    this.posPayload = posPayload;
    return this;
  }

   /**
   * Get posPayload
   * @return posPayload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PosPayload getPosPayload() {
    return posPayload;
  }


  public void setPosPayload(PosPayload posPayload) {
    this.posPayload = posPayload;
  }


  public ImmediatePaymentRequestData merchantPayload(MerchantPayload merchantPayload) {
    
    this.merchantPayload = merchantPayload;
    return this;
  }

   /**
   * Get merchantPayload
   * @return merchantPayload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MerchantPayload getMerchantPayload() {
    return merchantPayload;
  }


  public void setMerchantPayload(MerchantPayload merchantPayload) {
    this.merchantPayload = merchantPayload;
  }


  public ImmediatePaymentRequestData transactionType(PaymentTransactionType transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentTransactionType getTransactionType() {
    return transactionType;
  }


  public void setTransactionType(PaymentTransactionType transactionType) {
    this.transactionType = transactionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImmediatePaymentRequestData immediatePaymentRequestData = (ImmediatePaymentRequestData) o;
    return Objects.equals(this.clientReference, immediatePaymentRequestData.clientReference) &&
        Objects.equals(this.orderNumber, immediatePaymentRequestData.orderNumber) &&
        Objects.equals(this.skipRollback, immediatePaymentRequestData.skipRollback) &&
        Objects.equals(this.allowPartialSuccess, immediatePaymentRequestData.allowPartialSuccess) &&
        Objects.equals(this.payments, immediatePaymentRequestData.payments) &&
        Objects.equals(this.posPayload, immediatePaymentRequestData.posPayload) &&
        Objects.equals(this.merchantPayload, immediatePaymentRequestData.merchantPayload) &&
        Objects.equals(this.transactionType, immediatePaymentRequestData.transactionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientReference, orderNumber, skipRollback, allowPartialSuccess, payments, posPayload, merchantPayload, transactionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImmediatePaymentRequestData {\n");
    sb.append("    clientReference: ").append(toIndentedString(clientReference)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    skipRollback: ").append(toIndentedString(skipRollback)).append("\n");
    sb.append("    allowPartialSuccess: ").append(toIndentedString(allowPartialSuccess)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    posPayload: ").append(toIndentedString(posPayload)).append("\n");
    sb.append("    merchantPayload: ").append(toIndentedString(merchantPayload)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

