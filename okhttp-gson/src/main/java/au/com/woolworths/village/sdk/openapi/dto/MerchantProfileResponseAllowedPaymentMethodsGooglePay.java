/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The presence of this object in the response indicates that google pay is an allowed payment method and instrument in the container for the relevant merchant.
 */
@ApiModel(description = "The presence of this object in the response indicates that google pay is an allowed payment method and instrument in the container for the relevant merchant.")

public class MerchantProfileResponseAllowedPaymentMethodsGooglePay implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PUBLIC_KEY = "publicKey";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private String publicKey;

  public static final String SERIALIZED_NAME_PUBLIC_KEY_HASH = "publicKeyHash";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY_HASH)
  private String publicKeyHash;

  public static final String SERIALIZED_NAME_PUBLIC_KEY_EXPIRY = "publicKeyExpiry";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY_EXPIRY)
  private BigDecimal publicKeyExpiry;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchantName";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_CREDIT_CARD = "creditCard";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD)
  private MerchantProfileResponseAllowedPaymentMethodsGooglePayCreditCard creditCard;

  public static final String SERIALIZED_NAME_DEBIT_CARD = "debitCard";
  @SerializedName(SERIALIZED_NAME_DEBIT_CARD)
  private MerchantProfileResponseAllowedPaymentMethodsGooglePayDebitCard debitCard;

  /**
   * This property indicates the status of the google pay service in the container.
   */
  @JsonAdapter(ServiceStatusEnum.Adapter.class)
  public enum ServiceStatusEnum {
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED");

    private String value;

    ServiceStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ServiceStatusEnum fromValue(String value) {
      for (ServiceStatusEnum b : ServiceStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ServiceStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ServiceStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ServiceStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ServiceStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SERVICE_STATUS = "serviceStatus";
  @SerializedName(SERIALIZED_NAME_SERVICE_STATUS)
  private ServiceStatusEnum serviceStatus;


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay publicKey(String publicKey) {
    
    this.publicKey = publicKey;
    return this;
  }

   /**
   * The public key required by the Google Pay wallet.
   * @return publicKey
  **/
  @ApiModelProperty(example = "5HjfYVMvcLN3CakMj3yVzVlYAQ==", required = true, value = "The public key required by the Google Pay wallet.")

  public String getPublicKey() {
    return publicKey;
  }


  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay publicKeyHash(String publicKeyHash) {
    
    this.publicKeyHash = publicKeyHash;
    return this;
  }

   /**
   * The public key hash required by the Google Pay wallet.
   * @return publicKeyHash
  **/
  @ApiModelProperty(example = "7S7yCA0TpuZ6hoYrdMzZhMQ=", required = true, value = "The public key hash required by the Google Pay wallet.")

  public String getPublicKeyHash() {
    return publicKeyHash;
  }


  public void setPublicKeyHash(String publicKeyHash) {
    this.publicKeyHash = publicKeyHash;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay publicKeyExpiry(BigDecimal publicKeyExpiry) {
    
    this.publicKeyExpiry = publicKeyExpiry;
    return this;
  }

   /**
   * The expiry timestamp of the public key hash. The timestamp format is milliseconds since epoch.
   * @return publicKeyExpiry
  **/
  @ApiModelProperty(example = "1600491347369", required = true, value = "The expiry timestamp of the public key hash. The timestamp format is milliseconds since epoch.")

  public BigDecimal getPublicKeyExpiry() {
    return publicKeyExpiry;
  }


  public void setPublicKeyExpiry(BigDecimal publicKeyExpiry) {
    this.publicKeyExpiry = publicKeyExpiry;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The merchant id required by the Google Pay wallet.
   * @return merchantId
  **/
  @ApiModelProperty(example = "11111", required = true, value = "The merchant id required by the Google Pay wallet.")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay merchantName(String merchantName) {
    
    this.merchantName = merchantName;
    return this;
  }

   /**
   * The merchant name required by the Google Pay wallet.
   * @return merchantName
  **/
  @ApiModelProperty(example = "DUMMY", required = true, value = "The merchant name required by the Google Pay wallet.")

  public String getMerchantName() {
    return merchantName;
  }


  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay creditCard(MerchantProfileResponseAllowedPaymentMethodsGooglePayCreditCard creditCard) {
    
    this.creditCard = creditCard;
    return this;
  }

   /**
   * Get creditCard
   * @return creditCard
  **/
  @ApiModelProperty(required = true, value = "")

  public MerchantProfileResponseAllowedPaymentMethodsGooglePayCreditCard getCreditCard() {
    return creditCard;
  }


  public void setCreditCard(MerchantProfileResponseAllowedPaymentMethodsGooglePayCreditCard creditCard) {
    this.creditCard = creditCard;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay debitCard(MerchantProfileResponseAllowedPaymentMethodsGooglePayDebitCard debitCard) {
    
    this.debitCard = debitCard;
    return this;
  }

   /**
   * Get debitCard
   * @return debitCard
  **/
  @ApiModelProperty(required = true, value = "")

  public MerchantProfileResponseAllowedPaymentMethodsGooglePayDebitCard getDebitCard() {
    return debitCard;
  }


  public void setDebitCard(MerchantProfileResponseAllowedPaymentMethodsGooglePayDebitCard debitCard) {
    this.debitCard = debitCard;
  }


  public MerchantProfileResponseAllowedPaymentMethodsGooglePay serviceStatus(ServiceStatusEnum serviceStatus) {
    
    this.serviceStatus = serviceStatus;
    return this;
  }

   /**
   * This property indicates the status of the google pay service in the container.
   * @return serviceStatus
  **/
  @ApiModelProperty(required = true, value = "This property indicates the status of the google pay service in the container.")

  public ServiceStatusEnum getServiceStatus() {
    return serviceStatus;
  }


  public void setServiceStatus(ServiceStatusEnum serviceStatus) {
    this.serviceStatus = serviceStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantProfileResponseAllowedPaymentMethodsGooglePay merchantProfileResponseAllowedPaymentMethodsGooglePay = (MerchantProfileResponseAllowedPaymentMethodsGooglePay) o;
    return Objects.equals(this.publicKey, merchantProfileResponseAllowedPaymentMethodsGooglePay.publicKey) &&
        Objects.equals(this.publicKeyHash, merchantProfileResponseAllowedPaymentMethodsGooglePay.publicKeyHash) &&
        Objects.equals(this.publicKeyExpiry, merchantProfileResponseAllowedPaymentMethodsGooglePay.publicKeyExpiry) &&
        Objects.equals(this.merchantId, merchantProfileResponseAllowedPaymentMethodsGooglePay.merchantId) &&
        Objects.equals(this.merchantName, merchantProfileResponseAllowedPaymentMethodsGooglePay.merchantName) &&
        Objects.equals(this.creditCard, merchantProfileResponseAllowedPaymentMethodsGooglePay.creditCard) &&
        Objects.equals(this.debitCard, merchantProfileResponseAllowedPaymentMethodsGooglePay.debitCard) &&
        Objects.equals(this.serviceStatus, merchantProfileResponseAllowedPaymentMethodsGooglePay.serviceStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicKey, publicKeyHash, publicKeyExpiry, merchantId, merchantName, creditCard, debitCard, serviceStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantProfileResponseAllowedPaymentMethodsGooglePay {\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    publicKeyHash: ").append(toIndentedString(publicKeyHash)).append("\n");
    sb.append("    publicKeyExpiry: ").append(toIndentedString(publicKeyExpiry)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    creditCard: ").append(toIndentedString(creditCard)).append("\n");
    sb.append("    debitCard: ").append(toIndentedString(debitCard)).append("\n");
    sb.append("    serviceStatus: ").append(toIndentedString(serviceStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

