/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.annotations.SerializedName;

import java.io.Serializable;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The JSON request structure of the Tokenize Paypal endpoint.
 */
@ApiModel(description = "The JSON request structure of the Tokenize Paypal endpoint.")

public class TokenizePaypalRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NONCE = "nonce";
  @SerializedName(SERIALIZED_NAME_NONCE)
  private String nonce;

  public static final String SERIALIZED_NAME_PRIMARY = "primary";
  @SerializedName(SERIALIZED_NAME_PRIMARY)
  private Boolean primary;


  public TokenizePaypalRequest nonce(String nonce) {
    
    this.nonce = nonce;
    return this;
  }

   /**
   * The Paypal nonce that will be used during a Paypal payment.
   * @return nonce
  **/
  @ApiModelProperty(example = "d5e2986b-ffd5-03af-1bee-ff2dc1e83a56", required = true, value = "The Paypal nonce that will be used during a Paypal payment.")

  public String getNonce() {
    return nonce;
  }


  public void setNonce(String nonce) {
    this.nonce = nonce;
  }


  public TokenizePaypalRequest primary(Boolean primary) {
    
    this.primary = primary;
    return this;
  }

   /**
   * A flag to indicate if this payment instrument has to be set as the primary instrument.
   * @return primary
  **/
  @ApiModelProperty(example = "true", required = true, value = "A flag to indicate if this payment instrument has to be set as the primary instrument.")

  public Boolean getPrimary() {
    return primary;
  }


  public void setPrimary(Boolean primary) {
    this.primary = primary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenizePaypalRequest tokenizePaypalRequest = (TokenizePaypalRequest) o;
    return Objects.equals(this.nonce, tokenizePaypalRequest.nonce) &&
        Objects.equals(this.primary, tokenizePaypalRequest.primary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nonce, primary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenizePaypalRequest {\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    primary: ").append(toIndentedString(primary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

