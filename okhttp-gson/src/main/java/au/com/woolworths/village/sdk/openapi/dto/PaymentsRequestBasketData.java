/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * PaymentsRequestBasketData
 */

public class PaymentsRequestBasketData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ITEM_ID = "itemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_SUBCATEGORY = "subcategory";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY)
  private String subcategory;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  /**
   * The country currency code.
   */
  @JsonAdapter(CurrencyEnum.Adapter.class)
  public enum CurrencyEnum {
    AUD("AUD"),
    
    NZD("NZD");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CurrencyEnum fromValue(String value) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CurrencyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyEnum currency;


  public PaymentsRequestBasketData itemId(String itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * The item id, article id or SKU. Required if &#39;category&#39; is not present.
   * @return itemId
  **/
  @ApiModelProperty(example = "105609", required = true, value = "The item id, article id or SKU. Required if 'category' is not present.")

  public String getItemId() {
    return itemId;
  }


  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public PaymentsRequestBasketData category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The items category code. Required if &#39;itemId&#39; is not present or, if &#39;subcategory&#39; is present.
   * @return category
  **/
  @ApiModelProperty(example = "Dairy", required = true, value = "The items category code. Required if 'itemId' is not present or, if 'subcategory' is present.")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public PaymentsRequestBasketData subcategory(String subcategory) {
    
    this.subcategory = subcategory;
    return this;
  }

   /**
   * The items subcategory code. Requires &#39;category&#39; to be present.
   * @return subcategory
  **/
  @ApiModelProperty(example = "Condiment", required = true, value = "The items subcategory code. Requires 'category' to be present.")

  public String getSubcategory() {
    return subcategory;
  }


  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }


  public PaymentsRequestBasketData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The item, category or subcategory description.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Woolworths Sour Cream", value = "The item, category or subcategory description.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PaymentsRequestBasketData quantity(BigDecimal quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The item quantity.
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "The item quantity.")

  public BigDecimal getQuantity() {
    return quantity;
  }


  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public PaymentsRequestBasketData price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * The item price.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2.25", value = "The item price.")

  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public PaymentsRequestBasketData currency(CurrencyEnum currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The country currency code.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country currency code.")

  public CurrencyEnum getCurrency() {
    return currency;
  }


  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsRequestBasketData paymentsRequestBasketData = (PaymentsRequestBasketData) o;
    return Objects.equals(this.itemId, paymentsRequestBasketData.itemId) &&
        Objects.equals(this.category, paymentsRequestBasketData.category) &&
        Objects.equals(this.subcategory, paymentsRequestBasketData.subcategory) &&
        Objects.equals(this.description, paymentsRequestBasketData.description) &&
        Objects.equals(this.quantity, paymentsRequestBasketData.quantity) &&
        Objects.equals(this.price, paymentsRequestBasketData.price) &&
        Objects.equals(this.currency, paymentsRequestBasketData.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, category, subcategory, description, quantity, price, currency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsRequestBasketData {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

