/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.annotations.SerializedName;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * An instrument used for this transaction
 */
@ApiModel(description = "An instrument used for this transaction")

public class InstrumentAllocation implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PAYMENT_INSTRUMENT_ID = "paymentInstrumentId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_INSTRUMENT_ID)
  private String paymentInstrumentId;

  public static final String SERIALIZED_NAME_INSTRUMENT_TYPE = "instrumentType";
  @SerializedName(SERIALIZED_NAME_INSTRUMENT_TYPE)
  private String instrumentType;

  public static final String SERIALIZED_NAME_TRANSACTIONS = "transactions";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS)
  private List<InstrumentAllocationTransactions> transactions = new ArrayList<InstrumentAllocationTransactions>();


  public InstrumentAllocation paymentInstrumentId(String paymentInstrumentId) {
    
    this.paymentInstrumentId = paymentInstrumentId;
    return this;
  }

   /**
   * The ID of the payment instrument
   * @return paymentInstrumentId
  **/
  @ApiModelProperty(required = true, value = "The ID of the payment instrument")

  public String getPaymentInstrumentId() {
    return paymentInstrumentId;
  }


  public void setPaymentInstrumentId(String paymentInstrumentId) {
    this.paymentInstrumentId = paymentInstrumentId;
  }


  public InstrumentAllocation instrumentType(String instrumentType) {
    
    this.instrumentType = instrumentType;
    return this;
  }

   /**
   * The type of the payment instrument.
   * @return instrumentType
  **/
  @ApiModelProperty(required = true, value = "The type of the payment instrument.")

  public String getInstrumentType() {
    return instrumentType;
  }


  public void setInstrumentType(String instrumentType) {
    this.instrumentType = instrumentType;
  }


  public InstrumentAllocation transactions(List<InstrumentAllocationTransactions> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public InstrumentAllocation addTransactionsItem(InstrumentAllocationTransactions transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * The list of transactions associated with the instrument.  If no results match the request then an empty array will be returned
   * @return transactions
  **/
  @ApiModelProperty(required = true, value = "The list of transactions associated with the instrument.  If no results match the request then an empty array will be returned")

  public List<InstrumentAllocationTransactions> getTransactions() {
    return transactions;
  }


  public void setTransactions(List<InstrumentAllocationTransactions> transactions) {
    this.transactions = transactions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstrumentAllocation instrumentAllocation = (InstrumentAllocation) o;
    return Objects.equals(this.paymentInstrumentId, instrumentAllocation.paymentInstrumentId) &&
        Objects.equals(this.instrumentType, instrumentAllocation.instrumentType) &&
        Objects.equals(this.transactions, instrumentAllocation.transactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentInstrumentId, instrumentType, transactions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstrumentAllocation {\n");
    sb.append("    paymentInstrumentId: ").append(toIndentedString(paymentInstrumentId)).append("\n");
    sb.append("    instrumentType: ").append(toIndentedString(instrumentType)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

