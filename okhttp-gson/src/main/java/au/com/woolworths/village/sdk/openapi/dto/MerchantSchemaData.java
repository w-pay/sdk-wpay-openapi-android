/*
 * Village Wallet
 * APIs for Village Wallet
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.annotations.SerializedName;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Mandatory data object containing response
 */
@ApiModel(description = "Mandatory data object containing response")

public class MerchantSchemaData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_SCHEMA = "schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private Map<String, Object> schema = new HashMap<String, Object>();

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;


  public MerchantSchemaData schema(Map<String, Object> schema) {
    
    this.schema = schema;
    return this;
  }

  public MerchantSchemaData putSchemaItem(String key, Object schemaItem) {
    this.schema.put(key, schemaItem);
    return this;
  }

   /**
   * An arbitrary block of JSON formatted according to JSON Schema standards that can be used for configurable payload validation of merchant payloads
   * @return schema
  **/
  @ApiModelProperty(required = true, value = "An arbitrary block of JSON formatted according to JSON Schema standards that can be used for configurable payload validation of merchant payloads")

  public Map<String, Object> getSchema() {
    return schema;
  }


  public void setSchema(Map<String, Object> schema) {
    this.schema = schema;
  }


  public MerchantSchemaData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the schema e.g. pos or merchant
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of the schema e.g. pos or merchant")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public MerchantSchemaData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the provided schema
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the provided schema")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantSchemaData merchantSchemaData = (MerchantSchemaData) o;
    return Objects.equals(this.schema, merchantSchemaData.schema) &&
        Objects.equals(this.type, merchantSchemaData.type) &&
        Objects.equals(this.description, merchantSchemaData.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schema, type, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantSchemaData {\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

