/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Special handling instructions that have to be executed after a payment. Only present if no error occurred during payment.
 */
@ApiModel(description = "Special handling instructions that have to be executed after a payment. Only present if no error occurred during payment.")

public class PaymentsSuccessResponseHandlingInstructions implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * The handling instruction code.
   */
  @JsonAdapter(InstructionCodeEnum.Adapter.class)
  public enum InstructionCodeEnum {
    _100("100"),
    
    _110("110"),
    
    _120("120");

    private String value;

    InstructionCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InstructionCodeEnum fromValue(String value) {
      for (InstructionCodeEnum b : InstructionCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InstructionCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstructionCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InstructionCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InstructionCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INSTRUCTION_CODE = "instructionCode";
  @SerializedName(SERIALIZED_NAME_INSTRUCTION_CODE)
  private InstructionCodeEnum instructionCode;

  public static final String SERIALIZED_NAME_INSTRUCTION_MESSAGE = "instructionMessage";
  @SerializedName(SERIALIZED_NAME_INSTRUCTION_MESSAGE)
  private String instructionMessage;


  public PaymentsSuccessResponseHandlingInstructions instructionCode(InstructionCodeEnum instructionCode) {
    
    this.instructionCode = instructionCode;
    return this;
  }

   /**
   * The handling instruction code.
   * @return instructionCode
  **/
  @ApiModelProperty(required = true, value = "The handling instruction code.")

  public InstructionCodeEnum getInstructionCode() {
    return instructionCode;
  }


  public void setInstructionCode(InstructionCodeEnum instructionCode) {
    this.instructionCode = instructionCode;
  }


  public PaymentsSuccessResponseHandlingInstructions instructionMessage(String instructionMessage) {
    
    this.instructionMessage = instructionMessage;
    return this;
  }

   /**
   * The handling instruction message.
   * @return instructionMessage
  **/
  @ApiModelProperty(example = "Immediate Completion", required = true, value = "The handling instruction message.")

  public String getInstructionMessage() {
    return instructionMessage;
  }


  public void setInstructionMessage(String instructionMessage) {
    this.instructionMessage = instructionMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsSuccessResponseHandlingInstructions paymentsSuccessResponseHandlingInstructions = (PaymentsSuccessResponseHandlingInstructions) o;
    return Objects.equals(this.instructionCode, paymentsSuccessResponseHandlingInstructions.instructionCode) &&
        Objects.equals(this.instructionMessage, paymentsSuccessResponseHandlingInstructions.instructionMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instructionCode, instructionMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsSuccessResponseHandlingInstructions {\n");
    sb.append("    instructionCode: ").append(toIndentedString(instructionCode)).append("\n");
    sb.append("    instructionMessage: ").append(toIndentedString(instructionMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

