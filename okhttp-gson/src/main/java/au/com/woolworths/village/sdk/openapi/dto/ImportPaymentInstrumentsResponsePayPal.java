/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * ImportPaymentInstrumentsResponsePayPal
 */

public class ImportPaymentInstrumentsResponsePayPal implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_PAY_PAL_ID = "payPalId";
  @SerializedName(SERIALIZED_NAME_PAY_PAL_ID)
  private String payPalId;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_TOKEN = "paymentMethodToken";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_TOKEN)
  private String paymentMethodToken;

  /**
   * The import process result for the paypal instrument.
   */
  @JsonAdapter(ResultEnum.Adapter.class)
  public enum ResultEnum {
    OK("OK"),
    
    DUP("DUP"),
    
    EXP("EXP"),
    
    ERROR("ERROR");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResultEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResultEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private ResultEnum result;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "errorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private Object errorMessage;


  public ImportPaymentInstrumentsResponsePayPal customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The Paypal customer id.
   * @return customerId
  **/
  @ApiModelProperty(example = "690238314", required = true, value = "The Paypal customer id.")

  public String getCustomerId() {
    return customerId;
  }


  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ImportPaymentInstrumentsResponsePayPal payPalId(String payPalId) {
    
    this.payPalId = payPalId;
    return this;
  }

   /**
   * The Paypal email id.
   * @return payPalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jane.doe@paypal.com", value = "The Paypal email id.")

  public String getPayPalId() {
    return payPalId;
  }


  public void setPayPalId(String payPalId) {
    this.payPalId = payPalId;
  }


  public ImportPaymentInstrumentsResponsePayPal paymentMethodToken(String paymentMethodToken) {
    
    this.paymentMethodToken = paymentMethodToken;
    return this;
  }

   /**
   * The Paypal payment method token.
   * @return paymentMethodToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "I7wME6uOKgsq3fz3y52s", value = "The Paypal payment method token.")

  public String getPaymentMethodToken() {
    return paymentMethodToken;
  }


  public void setPaymentMethodToken(String paymentMethodToken) {
    this.paymentMethodToken = paymentMethodToken;
  }


  public ImportPaymentInstrumentsResponsePayPal result(ResultEnum result) {
    
    this.result = result;
    return this;
  }

   /**
   * The import process result for the paypal instrument.
   * @return result
  **/
  @ApiModelProperty(required = true, value = "The import process result for the paypal instrument.")

  public ResultEnum getResult() {
    return result;
  }


  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public ImportPaymentInstrumentsResponsePayPal errorMessage(Object errorMessage) {
    
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * The import process error message if \&quot;result\&quot; is \&quot;ERROR\&quot;. Will be null if \&quot;result\&quot; is not \&quot;ERROR\&quot;.
   * @return errorMessage
  **/
  @ApiModelProperty(required = true, value = "The import process error message if \"result\" is \"ERROR\". Will be null if \"result\" is not \"ERROR\".")

  public Object getErrorMessage() {
    return errorMessage;
  }


  public void setErrorMessage(Object errorMessage) {
    this.errorMessage = errorMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportPaymentInstrumentsResponsePayPal importPaymentInstrumentsResponsePayPal = (ImportPaymentInstrumentsResponsePayPal) o;
    return Objects.equals(this.customerId, importPaymentInstrumentsResponsePayPal.customerId) &&
        Objects.equals(this.payPalId, importPaymentInstrumentsResponsePayPal.payPalId) &&
        Objects.equals(this.paymentMethodToken, importPaymentInstrumentsResponsePayPal.paymentMethodToken) &&
        Objects.equals(this.result, importPaymentInstrumentsResponsePayPal.result) &&
        Objects.equals(this.errorMessage, importPaymentInstrumentsResponsePayPal.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, payPalId, paymentMethodToken, result, errorMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportPaymentInstrumentsResponsePayPal {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    payPalId: ").append(toIndentedString(payPalId)).append("\n");
    sb.append("    paymentMethodToken: ").append(toIndentedString(paymentMethodToken)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

