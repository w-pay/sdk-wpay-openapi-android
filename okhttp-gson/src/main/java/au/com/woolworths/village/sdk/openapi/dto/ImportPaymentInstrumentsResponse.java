/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import au.com.woolworths.village.sdk.openapi.dto.ImportPaymentInstrumentsResponseCreditCards;
import au.com.woolworths.village.sdk.openapi.dto.ImportPaymentInstrumentsResponsePayPal;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * The JSON response structure of the Import Payment Instruments endpoint.
 */
@ApiModel(description = "The JSON response structure of the Import Payment Instruments endpoint.")

public class ImportPaymentInstrumentsResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_SHOPPER_ID = "shopperId";
  @SerializedName(SERIALIZED_NAME_SHOPPER_ID)
  private String shopperId;

  public static final String SERIALIZED_NAME_CREDIT_CARDS = "creditCards";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARDS)
  private List<ImportPaymentInstrumentsResponseCreditCards> creditCards = null;

  public static final String SERIALIZED_NAME_PAY_PAL = "payPal";
  @SerializedName(SERIALIZED_NAME_PAY_PAL)
  private ImportPaymentInstrumentsResponsePayPal payPal;


  public ImportPaymentInstrumentsResponse uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * The IDM (Gigya) UID or merchant shopper id of the user. Do NOT use an email address!
   * @return uid
  **/
  @ApiModelProperty(example = "61ea4c7310df484d91e15cd6ad883ccb", required = true, value = "The IDM (Gigya) UID or merchant shopper id of the user. Do NOT use an email address!")

  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  public ImportPaymentInstrumentsResponse shopperId(String shopperId) {
    
    this.shopperId = shopperId;
    return this;
  }

   /**
   * The merchant shopper id of the user.
   * @return shopperId
  **/
  @ApiModelProperty(example = "12345", required = true, value = "The merchant shopper id of the user.")

  public String getShopperId() {
    return shopperId;
  }


  public void setShopperId(String shopperId) {
    this.shopperId = shopperId;
  }


  public ImportPaymentInstrumentsResponse creditCards(List<ImportPaymentInstrumentsResponseCreditCards> creditCards) {
    
    this.creditCards = creditCards;
    return this;
  }

  public ImportPaymentInstrumentsResponse addCreditCardsItem(ImportPaymentInstrumentsResponseCreditCards creditCardsItem) {
    if (this.creditCards == null) {
      this.creditCards = new ArrayList<ImportPaymentInstrumentsResponseCreditCards>();
    }
    this.creditCards.add(creditCardsItem);
    return this;
  }

   /**
   * Get creditCards
   * @return creditCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ImportPaymentInstrumentsResponseCreditCards> getCreditCards() {
    return creditCards;
  }


  public void setCreditCards(List<ImportPaymentInstrumentsResponseCreditCards> creditCards) {
    this.creditCards = creditCards;
  }


  public ImportPaymentInstrumentsResponse payPal(ImportPaymentInstrumentsResponsePayPal payPal) {
    
    this.payPal = payPal;
    return this;
  }

   /**
   * Get payPal
   * @return payPal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ImportPaymentInstrumentsResponsePayPal getPayPal() {
    return payPal;
  }


  public void setPayPal(ImportPaymentInstrumentsResponsePayPal payPal) {
    this.payPal = payPal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportPaymentInstrumentsResponse importPaymentInstrumentsResponse = (ImportPaymentInstrumentsResponse) o;
    return Objects.equals(this.uid, importPaymentInstrumentsResponse.uid) &&
        Objects.equals(this.shopperId, importPaymentInstrumentsResponse.shopperId) &&
        Objects.equals(this.creditCards, importPaymentInstrumentsResponse.creditCards) &&
        Objects.equals(this.payPal, importPaymentInstrumentsResponse.payPal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, shopperId, creditCards, payPal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportPaymentInstrumentsResponse {\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    shopperId: ").append(toIndentedString(shopperId)).append("\n");
    sb.append("    creditCards: ").append(toIndentedString(creditCards)).append("\n");
    sb.append("    payPal: ").append(toIndentedString(payPal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

