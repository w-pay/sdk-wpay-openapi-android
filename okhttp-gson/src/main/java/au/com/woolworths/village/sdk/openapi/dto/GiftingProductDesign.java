/*
 * Wpay APIs
 * Wpay APIs for payments and gifting
 *
 * The version of the OpenAPI document: 1.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.woolworths.village.sdk.openapi.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.io.Serializable;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The aesthectic design of a gift card product
 */
@ApiModel(description = "The aesthectic design of a gift card product")

public class GiftingProductDesign implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DESIGN_ID = "designId";
  @SerializedName(SERIALIZED_NAME_DESIGN_ID)
  private String designId;

  /**
   * Format of the design (note that different design types have different unique IDs)
   */
  @JsonAdapter(DesignTypeEnum.Adapter.class)
  public enum DesignTypeEnum {
    DIGITAL("DIGITAL"),
    
    PHYSICAL("PHYSICAL");

    private String value;

    DesignTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DesignTypeEnum fromValue(String value) {
      for (DesignTypeEnum b : DesignTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DesignTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DesignTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DesignTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DesignTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DESIGN_TYPE = "designType";
  @SerializedName(SERIALIZED_NAME_DESIGN_TYPE)
  private DesignTypeEnum designType;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;


  public GiftingProductDesign designId(String designId) {
    
    this.designId = designId;
    return this;
  }

   /**
   * Unique (within the scope of designType) identifier of the aesthectic design of the gift card
   * @return designId
  **/
  @ApiModelProperty(required = true, value = "Unique (within the scope of designType) identifier of the aesthectic design of the gift card")

  public String getDesignId() {
    return designId;
  }


  public void setDesignId(String designId) {
    this.designId = designId;
  }


  public GiftingProductDesign designType(DesignTypeEnum designType) {
    
    this.designType = designType;
    return this;
  }

   /**
   * Format of the design (note that different design types have different unique IDs)
   * @return designType
  **/
  @ApiModelProperty(required = true, value = "Format of the design (note that different design types have different unique IDs)")

  public DesignTypeEnum getDesignType() {
    return designType;
  }


  public void setDesignType(DesignTypeEnum designType) {
    this.designType = designType;
  }


  public GiftingProductDesign imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * URL to the image for the gift card design
   * @return imageUrl
  **/
  @ApiModelProperty(required = true, value = "URL to the image for the gift card design")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftingProductDesign giftingProductDesign = (GiftingProductDesign) o;
    return Objects.equals(this.designId, giftingProductDesign.designId) &&
        Objects.equals(this.designType, giftingProductDesign.designType) &&
        Objects.equals(this.imageUrl, giftingProductDesign.imageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(designId, designType, imageUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftingProductDesign {\n");
    sb.append("    designId: ").append(toIndentedString(designId)).append("\n");
    sb.append("    designType: ").append(toIndentedString(designType)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

